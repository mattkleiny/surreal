// An example blueprint for the blueprint parser system.

#include "Assets/blueprints/common.blueprint";

// TODO: unify the ideas of components and attributes
//       (aka data objects that can be attached to other data objects).
// TODO: allow reference assets and resources by name
// TODO: allow defining entities, items, components, events, attributes and overrides
// TODO: allow 'multiple inheritance' since this is about mixing data and not behaviour
// TODO: support tags on entities and items?
// TODO: support recipes on entities and items?
// TODO: support dice rolls and etc?

// A basic sword item
item Sword : MeleeWeapon {
  #tag Droppable
  #tag Throwable

  attribute Damage(20) override;
  attribute Sprite("Assets/sprites/sprite_sword");
}

item Gun : RangedWeapon {
  #tag Droppable

  attribute Damage(10) override;
  attribute Sprite("Assets/sprites/sprite_gun");
}

// Represents an actor in the game
entity Actor {
  component Transform();
  component SpriteRenderer();
}

// Represents a character in the game
entity Character : Actor {
  component Health(10);
  component Toxin(0);
  component Coins(0);
  component MeleeWeapon(None);
  component RangedWeapon(None);
  component Inventory(Empty);
  component MutationSet(Empty);

  event HealthReceived(Health);
  event HealthLost(Health);
  event ToxinReceived(Toxin);
  event ToxinLost(Toxin);
}

// The player character
entity Player : Character {
  component Health(100) override;
  component Coins(10) override;
  component MeleeWeapon(Sword) override;
  component InputReceiver("InputChannel.Player1");

  event PlayerSpawned();
  event PlayerDied();
}
